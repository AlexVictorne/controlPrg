<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DatabaseDataSet" targetNamespace="http://tempuri.org/DatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/DatabaseDataSet.xsd" xmlns="http://tempuri.org/DatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.controlPrg.Properties.Settings.GlobalReference.Default.DatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableTableAdapter" GeneratorDataComponentClassName="TableTableAdapter" Name="Table" UserDataComponentName="TableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.[Table]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Table] WHERE (([neuron] = @Original_neuron) AND ([classifier] = @Original_classifier) AND ([weight] = @Original_weight))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_neuron" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="neuron" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_classifier" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="classifier" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_weight" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="weight" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Table] ([neuron], [classifier], [weight]) VALUES (@neuron, @classifier, @weight);
SELECT neuron, classifier, weight FROM [Table] WHERE (classifier = @classifier) AND (neuron = @neuron)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@neuron" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="neuron" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@classifier" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="classifier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@weight" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="weight" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT neuron, classifier, weight
FROM     [Table]
WHERE  (neuron = @neuron) AND (classifier = @classifier) AND (weight = @weight) OR
                  (neuron = @neuron) AND (weight = @weight) AND (0 = @par2) OR
                  (classifier = @classifier) AND (weight = @weight) AND (0 = @par1) OR
                  (weight = @weight) AND (0 = @par1) AND (0 = @par2) OR
                  (neuron = @neuron) AND (classifier = @classifier) AND (0 = @par3) OR
                  (neuron = @neuron) AND (0 = @par2) AND (0 = @par3) OR
                  (classifier = @classifier) AND (0 = @par1) AND (0 = @par3) OR
                  (0 = @par1) AND (0 = @par2) AND (0 = @par3)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="neuron" ColumnName="neuron" DataSourceName="[C:\USERS\ACER\DOWNLOADS\CONTROLPRG-MASTER\CONTROLPRG-MASTER\CONTROLPRG\DATABASE.MDF].dbo.[Table]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@neuron" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="neuron" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="classifier" ColumnName="classifier" DataSourceName="[C:\USERS\ACER\DOWNLOADS\CONTROLPRG-MASTER\CONTROLPRG-MASTER\CONTROLPRG\DATABASE.MDF].dbo.[Table]" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@classifier" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="classifier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="weight" ColumnName="weight" DataSourceName="[C:\USERS\ACER\DOWNLOADS\CONTROLPRG-MASTER\CONTROLPRG-MASTER\CONTROLPRG\DATABASE.MDF].dbo.[Table]" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@weight" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="weight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="par2" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@par2" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="par1" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@par1" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="par3" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@par3" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Table] SET [neuron] = @neuron, [classifier] = @classifier, [weight] = @weight WHERE (([neuron] = @Original_neuron) AND ([classifier] = @Original_classifier) AND ([weight] = @Original_weight));
SELECT neuron, classifier, weight FROM [Table] WHERE (classifier = @classifier) AND (neuron = @neuron)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@neuron" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="neuron" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@classifier" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="classifier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@weight" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="weight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_neuron" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="neuron" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_classifier" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="classifier" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_weight" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="weight" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="neuron" DataSetColumn="neuron" />
              <Mapping SourceColumn="classifier" DataSetColumn="classifier" />
              <Mapping SourceColumn="weight" DataSetColumn="weight" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Table_DataTableAdapter" GeneratorDataComponentClassName="Table_DataTableAdapter" Name="Table_Data" UserDataComponentName="Table_DataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.Table_Data" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Table_Data] WHERE (([Classifier] = @Original_Classifier) AND ([Description] = @Original_Description))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Classifier" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Classifier" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Table_Data] ([Classifier], [Description], [Data]) VALUES (@Classifier, @Description, @Data);
SELECT Classifier, Description, Data FROM Table_Data WHERE (Classifier = @Classifier) AND (Description = @Description)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Classifier" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Classifier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Xml" Direction="Input" ParameterName="@Data" Precision="0" ProviderType="Xml" Scale="0" Size="0" SourceColumn="Data" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Classifier, Description, Data
FROM     Table_Data
WHERE  (Classifier = @classifier) AND (Description = @description) OR
                  (Description = @description) AND (0 = @par1) OR
                  (Classifier = @classifier) AND (0 = @par2) OR
                  (0 = @par1) AND (0 = @par2)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="classifier" ColumnName="Classifier" DataSourceName="[C:\USERS\ACER\DOWNLOADS\CONTROLPRG-MASTER\CONTROLPRG-MASTER\CONTROLPRG\DATABASE.MDF].dbo.Table_Data" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@classifier" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="Classifier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="description" ColumnName="Description" DataSourceName="[C:\USERS\ACER\DOWNLOADS\CONTROLPRG-MASTER\CONTROLPRG-MASTER\CONTROLPRG\DATABASE.MDF].dbo.Table_Data" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@description" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="par1" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@par1" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="par2" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@par2" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Table_Data] SET [Classifier] = @Classifier, [Description] = @Description, [Data] = @Data WHERE (([Classifier] = @Original_Classifier) AND ([Description] = @Original_Description));
SELECT Classifier, Description, Data FROM Table_Data WHERE (Classifier = @Classifier) AND (Description = @Description)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Classifier" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Classifier" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Xml" Direction="Input" ParameterName="@Data" Precision="0" ProviderType="Xml" Scale="0" Size="0" SourceColumn="Data" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Classifier" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Classifier" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Classifier" DataSetColumn="Classifier" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="Data" DataSetColumn="Data" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DatabaseDataSet" msprop:Generator_UserDSName="DatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Table" msprop:Generator_TableClassName="TableDataTable" msprop:Generator_TableVarName="tableTable" msprop:Generator_RowChangedName="TableRowChanged" msprop:Generator_TablePropName="Table" msprop:Generator_RowDeletingName="TableRowDeleting" msprop:Generator_RowChangingName="TableRowChanging" msprop:Generator_RowEvHandlerName="TableRowChangeEventHandler" msprop:Generator_RowDeletedName="TableRowDeleted" msprop:Generator_RowClassName="TableRow" msprop:Generator_UserTableName="Table" msprop:Generator_RowEvArgName="TableRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="neuron" msprop:Generator_ColumnVarNameInTable="columnneuron" msprop:Generator_ColumnPropNameInRow="neuron" msprop:Generator_ColumnPropNameInTable="neuronColumn" msprop:Generator_UserColumnName="neuron" type="xs:int" />
              <xs:element name="classifier" msprop:Generator_ColumnVarNameInTable="columnclassifier" msprop:Generator_ColumnPropNameInRow="classifier" msprop:Generator_ColumnPropNameInTable="classifierColumn" msprop:Generator_UserColumnName="classifier">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="weight" msprop:Generator_ColumnVarNameInTable="columnweight" msprop:Generator_ColumnPropNameInRow="weight" msprop:Generator_ColumnPropNameInTable="weightColumn" msprop:Generator_UserColumnName="weight" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Table_Data" msprop:Generator_TableClassName="Table_DataDataTable" msprop:Generator_TableVarName="tableTable_Data" msprop:Generator_RowChangedName="Table_DataRowChanged" msprop:Generator_TablePropName="Table_Data" msprop:Generator_RowDeletingName="Table_DataRowDeleting" msprop:Generator_RowChangingName="Table_DataRowChanging" msprop:Generator_RowEvHandlerName="Table_DataRowChangeEventHandler" msprop:Generator_RowDeletedName="Table_DataRowDeleted" msprop:Generator_RowClassName="Table_DataRow" msprop:Generator_UserTableName="Table_Data" msprop:Generator_RowEvArgName="Table_DataRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Classifier" msprop:Generator_ColumnVarNameInTable="columnClassifier" msprop:Generator_ColumnPropNameInRow="Classifier" msprop:Generator_ColumnPropNameInTable="ClassifierColumn" msprop:Generator_UserColumnName="Classifier">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Data" msprop:Generator_ColumnVarNameInTable="columnData" msprop:Generator_ColumnPropNameInRow="Data" msprop:Generator_ColumnPropNameInTable="DataColumn" msprop:Generator_UserColumnName="Data">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Table" />
      <xs:field xpath="mstns:neuron" />
      <xs:field xpath="mstns:classifier" />
    </xs:unique>
    <xs:unique name="Table_Data_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Table_Data" />
      <xs:field xpath="mstns:Classifier" />
      <xs:field xpath="mstns:Description" />
    </xs:unique>
  </xs:element>
</xs:schema>